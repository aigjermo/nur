name: "Build and populate cache"

env:
  # Set this to notify the global nur package registry that changes are
  # available.
  #
  # The repo name as used in
  # https://github.com/nix-community/NUR/blob/master/repos.json
  NUR_REPO: false
  # Set this to cache your build results in cachix for faster builds
  # in CI and for everyone who uses your cache.
  #
  # Format: Your cachix cache host name without the ".cachix.org" suffix.
  # Example: mycache (for mycache.cachix.org)
  #
  # For this to work, you also need to set the CACHIX_SIGNING_KEY or
  # CACHIX_AUTH_TOKEN secret in your repository secrets settings in
  # Github found at
  # https://github.com/<your_githubname>/nur-packages/settings/secrets
  CACHIX_NAME: false

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    # rebuild everyday at 5:18
    - cron:  '18 5 * * *'

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        nixChannel:
          - nixos-unstable
          - nixpkgs-unstable
          - nixos-22.05
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: cachix/install-nix-action@v17
      with:
        nix_path: "nixpkgs=channel:${{ matrix.nixChannel }}"
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
    - name: Setup cachix
      uses: cachix/cachix-action@v10
      if: ${{ env.CACHIX_NAME != 'false' }}
      with:
        name: ${{ env.CACHIX_NAME }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Update flake inputs
      run: |
        nix flake update --override-input nixpkgs \
        "github:NixOs/nixpkgs/${{ matrix.nixChannel }}"
    - name: Check evaluation
      run: nix flake check
    - name: nix build cacheable outputs
      run: nix build -f ci.nix cacheOutputs --print-out-paths
    - name: Trigger NUR update
      if: ${{ env.NUR_REPO != 'false' }}
      run: curl -XPOST "https://nur-update.herokuapp.com/update?repo=${{ env.NUR_REPO }}"
